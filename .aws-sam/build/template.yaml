Resources:
  matchproductsServiceRoleB0AA42DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/match-products/ServiceRole/Resource
  matchproductsServiceRoleDefaultPolicy7B98EBB7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':secretsmanager:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :secret:InfraspeakApp/Production/ApiCredentials-??????
        Version: '2012-10-17'
      PolicyName: matchproductsServiceRoleDefaultPolicy7B98EBB7
      Roles:
      - Ref: matchproductsServiceRoleB0AA42DD
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/match-products/ServiceRole/DefaultPolicy/Resource
  matchproducts73EA0661:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f5e0c389642f8d36960384c702448399e67466f62415d8a815261003bf3ea0bb.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - matchproductsServiceRoleB0AA42DD
        - Arn
      Runtime: nodejs20.x
      Environment:
        Variables:
          API_KEY_INFRASPEAK: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...
          API_ID: 4702fb74-32dc-43fc-8813-5f396b716360
          API_KEY: c7BBgAn9L2G5nWmErEyUpX82zIQ09a2ft9d5f5hYsdKPzQ6YSD4HHiEfEMbguS5CUJ9D3fNcesSfqDrT46KQ==
      Timeout: 200
    DependsOn:
    - matchproductsServiceRoleDefaultPolicy7B98EBB7
    - matchproductsServiceRoleB0AA42DD
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/match-products/Resource
      aws:asset:path: ../../asset.f5e0c389642f8d36960384c702448399e67466f62415d8a815261003bf3ea0bb
      aws:asset:is-bundled: true
      aws:asset:property: Code
  CronRule93635715:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(12 hours)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - matchproducts73EA0661
          - Arn
        DeadLetterConfig:
          Arn:
            Fn::GetAtt:
            - CronDeadLetterQueueA8BA82FD
            - Arn
        Id: Target0
        RetryPolicy:
          MaximumRetryAttempts: 2
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/CronRule/Resource
  CronRuleAllowEventRuleCdkInfraspeakStackmatchproducts71BF0AE0DC6A768A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - matchproducts73EA0661
        - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - CronRule93635715
        - Arn
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/CronRule/AllowEventRuleCdkInfraspeakStackmatchproducts71BF0AE0
  CronDeadLetterQueueA8BA82FD:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/CronDeadLetterQueue/Resource
  CronDeadLetterQueuePolicy1350A992:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Action: sqs:SendMessage
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::GetAtt:
                - CronRule93635715
                - Arn
          Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Resource:
            Fn::GetAtt:
            - CronDeadLetterQueueA8BA82FD
            - Arn
          Sid: AllowEventRuleCdkInfraspeakStackCronRule76F27DC8
        Version: '2012-10-17'
      Queues:
      - Ref: CronDeadLetterQueueA8BA82FD
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/CronDeadLetterQueue/Policy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/01PW07EMAw8y/6nhhbtAdiV+GShHKDKpmblPhKo40Uo6t1xUl4/mRlbnsk0UO9ruN3ZD65cP1YTnSG9ROtG0yIHWRwa3XVpsvO5t50PPQ4MjwUexLtIwRuyM6Q2TGiOr77gU5jIfWa5sdXwXWeZMTLcZ1ANB3EjxoNlNJs9JD34dc3HuMzErGo1eEWv16mV7xxFtX3X0bOglNlGyvv3g39yXU1J14YX8pe8PUl8k1gMfworPwbfUyy5uTIMfHNtGthDvRuYqFrER5oR2g2/ALcVTuxHAQAA
    Metadata:
      aws:cdk:path: CdkInfraspeakStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  LambdaFunctionArn:
    Description: The ARN of the match-products Lambda function
    Value:
      Fn::GetAtt:
      - matchproducts73EA0661
      - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - af-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ca-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-northwest-1
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-2
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-3
      - Fn::Equals:
        - Ref: AWS::Region
        - il-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - sa-east-1
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-2
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Contains:
          - - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          - Ref: BootstrapVersion
      AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
        with a recent version of the CDK CLI.
